{"ast":null,"code":"import _regeneratorRuntime from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GLOBALTYPES}from'../actions/globalTypes';import{getDataAPI}from'../../utils/fetchData';export var SUGGES_TYPES={LOADING:'LOADING_SUGGES',GET_USERS:'GET_USERS_SUGGES'};export var getSuggestions=function getSuggestions(token){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:SUGGES_TYPES.LOADING,payload:true});_context.next=4;return getDataAPI('suggestionsUser',token);case 4:res=_context.sent;dispatch({type:SUGGES_TYPES.GET_USERS,payload:res.data});dispatch({type:SUGGES_TYPES.LOADING,payload:false});_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context.t0.response.data.msg}});case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function(_x){return _ref.apply(this,arguments);};}();};","map":{"version":3,"sources":["H:/Mern Stack Projects/WebApp/server/client/src/redux/actions/suggestionsAction.js"],"names":["GLOBALTYPES","getDataAPI","SUGGES_TYPES","LOADING","GET_USERS","getSuggestions","token","dispatch","type","payload","res","data","ALERT","error","response","msg"],"mappings":"iUAAA,OAASA,WAAT,KAA4B,wBAA5B,CACA,OAASC,UAAT,KAA2B,uBAA3B,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,CACxBC,OAAO,CAAE,gBADe,CAExBC,SAAS,CAAE,kBAFa,CAArB,CAKP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,iGAAW,iBAAOC,QAAP,0IAEjCA,QAAQ,CAAC,CAAEC,IAAI,CAAEN,YAAY,CAACC,OAArB,CAA8BM,OAAO,CAAE,IAAvC,CAAD,CAAR,CAFiC,sBAIfR,CAAAA,UAAU,CAAC,iBAAD,CAAoBK,KAApB,CAJK,QAI3BI,GAJ2B,eAKjCH,QAAQ,CAAC,CAAEC,IAAI,CAAEN,YAAY,CAACE,SAArB,CAAgCK,OAAO,CAAEC,GAAG,CAACC,IAA7C,CAAD,CAAR,CAEAJ,QAAQ,CAAC,CAAEC,IAAI,CAAEN,YAAY,CAACC,OAArB,CAA8BM,OAAO,CAAE,KAAvC,CAAD,CAAR,CAPiC,+EAUjCF,QAAQ,CAAC,CAACC,IAAI,CAAER,WAAW,CAACY,KAAnB,CAA0BH,OAAO,CAAE,CAACI,KAAK,CAAE,YAAIC,QAAJ,CAAaH,IAAb,CAAkBI,GAA1B,CAAnC,CAAD,CAAR,CAViC,oEAAX,gEAAvB","sourcesContent":["import { GLOBALTYPES } from '../actions/globalTypes'\nimport { getDataAPI } from '../../utils/fetchData'\n\nexport const SUGGES_TYPES = {\n    LOADING: 'LOADING_SUGGES',\n    GET_USERS: 'GET_USERS_SUGGES',\n}\n\nexport const getSuggestions = (token) => async (dispatch) => {\n    try {\n        dispatch({ type: SUGGES_TYPES.LOADING, payload: true })\n        \n        const res = await getDataAPI('suggestionsUser', token)\n        dispatch({ type: SUGGES_TYPES.GET_USERS, payload: res.data })\n\n        dispatch({ type: SUGGES_TYPES.LOADING, payload: false })\n        \n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\n    }\n}"]},"metadata":{},"sourceType":"module"}