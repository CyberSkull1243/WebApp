{"ast":null,"code":"import _regeneratorRuntime from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GLOBALTYPES}from'./globalTypes';import{postDataAPI}from'../../utils/fetchData';import valid from'../../utils/valid';export var login=function login(data){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;dispatch({type:GLOBALTYPES.ALERT,payload:{loading:true}});_context.next=4;return postDataAPI('login',data);case 4:res=_context.sent;dispatch({type:GLOBALTYPES.AUTH,payload:{token:res.data.access_token,user:res.data.user}});localStorage.setItem(\"firstLogin\",true);dispatch({type:GLOBALTYPES.ALERT,payload:{success:res.data.msg}});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context.t0.response.data.msg}});case 13:case\"end\":return _context.stop();}}},_callee,null,[[0,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var refreshToken=function refreshToken(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var firstLogin,res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:firstLogin=localStorage.getItem(\"firstLogin\");if(!firstLogin){_context2.next=14;break;}dispatch({type:GLOBALTYPES.ALERT,payload:{loading:true}});_context2.prev=3;_context2.next=6;return postDataAPI('refresh_token');case 6:res=_context2.sent;dispatch({type:GLOBALTYPES.AUTH,payload:{token:res.data.access_token,user:res.data.user}});dispatch({type:GLOBALTYPES.ALERT,payload:{}});_context2.next=14;break;case 11:_context2.prev=11;_context2.t0=_context2[\"catch\"](3);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context2.t0.response.data.msg}});case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[3,11]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var register=function register(data){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var check,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:check=valid(data);if(!(check.errLength>0)){_context3.next=3;break;}return _context3.abrupt(\"return\",dispatch({type:GLOBALTYPES.ALERT,payload:check.errMsg}));case 3:_context3.prev=3;dispatch({type:GLOBALTYPES.ALERT,payload:{loading:true}});_context3.next=7;return postDataAPI('register',data);case 7:res=_context3.sent;dispatch({type:GLOBALTYPES.AUTH,payload:{token:res.data.access_token,user:res.data.user}});localStorage.setItem(\"firstLogin\",true);dispatch({type:GLOBALTYPES.ALERT,payload:{success:res.data.msg}});_context3.next=16;break;case 13:_context3.prev=13;_context3.t0=_context3[\"catch\"](3);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context3.t0.response.data.msg}});case 16:case\"end\":return _context3.stop();}}},_callee3,null,[[3,13]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var logout=function logout(){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;localStorage.removeItem('firstLogin');_context4.next=4;return postDataAPI('logout');case 4:window.location.href=\"/\";_context4.next=10;break;case 7:_context4.prev=7;_context4.t0=_context4[\"catch\"](0);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context4.t0.response.data.msg}});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,7]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"sources":["H:/Mern Stack Projects/WebApp/server/client/src/redux/actions/authAction.js"],"names":["GLOBALTYPES","postDataAPI","valid","login","data","dispatch","type","ALERT","payload","loading","res","AUTH","token","access_token","user","localStorage","setItem","success","msg","error","response","refreshToken","firstLogin","getItem","register","check","errLength","errMsg","logout","removeItem","window","location","href"],"mappings":"iUAAA,OAASA,WAAT,KAA4B,eAA5B,CACA,OAASC,WAAT,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CAGA,MAAO,IAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,IAAD,iGAAU,iBAAOC,QAAP,0IAEvBA,QAAQ,CAAC,CAAEC,IAAI,CAAEN,WAAW,CAACO,KAApB,CAA2BC,OAAO,CAAE,CAACC,OAAO,CAAE,IAAV,CAApC,CAAD,CAAR,CAFuB,sBAGLR,CAAAA,WAAW,CAAC,OAAD,CAAUG,IAAV,CAHN,QAGjBM,GAHiB,eAIvBL,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACW,IADb,CAELH,OAAO,CAAE,CACLI,KAAK,CAAEF,GAAG,CAACN,IAAJ,CAASS,YADX,CAELC,IAAI,CAAEJ,GAAG,CAACN,IAAJ,CAASU,IAFV,CAFJ,CAAD,CAAR,CAQAC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC,IAAnC,EACAX,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACO,KADb,CAELC,OAAO,CAAE,CACLS,OAAO,CAAEP,GAAG,CAACN,IAAJ,CAASc,GADb,CAFJ,CAAD,CAAR,CAbuB,iFAqBvBb,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACO,KADb,CAELC,OAAO,CAAE,CACLW,KAAK,CAAE,YAAIC,QAAJ,CAAahB,IAAb,CAAkBc,GADpB,CAFJ,CAAD,CAAR,CArBuB,qEAAV,gEAAd,CA+BP,MAAO,IAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,mGAAM,kBAAOhB,QAAP,yIACxBiB,UADwB,CACXP,YAAY,CAACQ,OAAb,CAAqB,YAArB,CADW,KAE3BD,UAF2B,2BAG1BjB,QAAQ,CAAC,CAAEC,IAAI,CAAEN,WAAW,CAACO,KAApB,CAA2BC,OAAO,CAAE,CAACC,OAAO,CAAE,IAAV,CAApC,CAAD,CAAR,CAH0B,wCAMJR,CAAAA,WAAW,CAAC,eAAD,CANP,QAMhBS,GANgB,gBAOtBL,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACW,IADb,CAELH,OAAO,CAAE,CACLI,KAAK,CAAEF,GAAG,CAACN,IAAJ,CAASS,YADX,CAELC,IAAI,CAAEJ,GAAG,CAACN,IAAJ,CAASU,IAFV,CAFJ,CAAD,CAAR,CAQAT,QAAQ,CAAC,CAAEC,IAAI,CAAEN,WAAW,CAACO,KAApB,CAA2BC,OAAO,CAAE,EAApC,CAAD,CAAR,CAfsB,qFAkBtBH,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACO,KADb,CAELC,OAAO,CAAE,CACLW,KAAK,CAAE,aAAIC,QAAJ,CAAahB,IAAb,CAAkBc,GADpB,CAFJ,CAAD,CAAR,CAlBsB,uEAAN,kEAArB,CA4BP,MAAO,IAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACpB,IAAD,kGAAU,kBAAOC,QAAP,oIACxBoB,KADwB,CAChBvB,KAAK,CAACE,IAAD,CADW,MAE3BqB,KAAK,CAACC,SAAN,CAAkB,CAFS,4DAGvBrB,QAAQ,CAAC,CAACC,IAAI,CAAEN,WAAW,CAACO,KAAnB,CAA0BC,OAAO,CAAEiB,KAAK,CAACE,MAAzC,CAAD,CAHe,0BAM1BtB,QAAQ,CAAC,CAACC,IAAI,CAAEN,WAAW,CAACO,KAAnB,CAA0BC,OAAO,CAAE,CAACC,OAAO,CAAE,IAAV,CAAnC,CAAD,CAAR,CAN0B,uBAQRR,CAAAA,WAAW,CAAC,UAAD,CAAaG,IAAb,CARH,QAQpBM,GARoB,gBAS1BL,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACW,IADb,CAELH,OAAO,CAAE,CACLI,KAAK,CAAEF,GAAG,CAACN,IAAJ,CAASS,YADX,CAELC,IAAI,CAAEJ,GAAG,CAACN,IAAJ,CAASU,IAFV,CAFJ,CAAD,CAAR,CAQAC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAmC,IAAnC,EACAX,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACO,KADb,CAELC,OAAO,CAAE,CACLS,OAAO,CAAEP,GAAG,CAACN,IAAJ,CAASc,GADb,CAFJ,CAAD,CAAR,CAlB0B,qFAyB1Bb,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACO,KADb,CAELC,OAAO,CAAE,CACLW,KAAK,CAAE,aAAIC,QAAJ,CAAahB,IAAb,CAAkBc,GADpB,CAFJ,CAAD,CAAR,CAzB0B,uEAAV,kEAAjB,CAmCP,MAAO,IAAMU,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,mGAAM,kBAAOvB,QAAP,uIAEpBU,YAAY,CAACc,UAAb,CAAwB,YAAxB,EAFoB,uBAGd5B,CAAAA,WAAW,CAAC,QAAD,CAHG,QAIpB6B,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAuB,GAAvB,CAJoB,mFAMpB3B,QAAQ,CAAC,CACLC,IAAI,CAAEN,WAAW,CAACO,KADb,CAELC,OAAO,CAAE,CACLW,KAAK,CAAE,aAAIC,QAAJ,CAAahB,IAAb,CAAkBc,GADpB,CAFJ,CAAD,CAAR,CANoB,sEAAN,kEAAf","sourcesContent":["import { GLOBALTYPES } from './globalTypes'\nimport { postDataAPI } from '../../utils/fetchData'\nimport valid from '../../utils/valid'\n\n\nexport const login = (data) => async (dispatch) => {\n    try {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: true} })\n        const res = await postDataAPI('login', data)\n        dispatch({ \n            type: GLOBALTYPES.AUTH, \n            payload: {\n                token: res.data.access_token,\n                user: res.data.user\n            } \n        })\n\n        localStorage.setItem(\"firstLogin\", true)\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                success: res.data.msg\n            } \n        })\n        \n    } catch (err) {\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}\n\n\nexport const refreshToken = () => async (dispatch) => {\n    const firstLogin = localStorage.getItem(\"firstLogin\")\n    if(firstLogin){\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: true} })\n\n        try {\n            const res = await postDataAPI('refresh_token')\n            dispatch({ \n                type: GLOBALTYPES.AUTH, \n                payload: {\n                    token: res.data.access_token,\n                    user: res.data.user\n                } \n            })\n\n            dispatch({ type: GLOBALTYPES.ALERT, payload: {} })\n\n        } catch (err) {\n            dispatch({ \n                type: GLOBALTYPES.ALERT, \n                payload: {\n                    error: err.response.data.msg\n                } \n            })\n        }\n    }\n}\n\nexport const register = (data) => async (dispatch) => {\n    const check = valid(data)\n    if(check.errLength > 0)\n    return dispatch({type: GLOBALTYPES.ALERT, payload: check.errMsg})\n\n    try {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {loading: true}})\n\n        const res = await postDataAPI('register', data)\n        dispatch({ \n            type: GLOBALTYPES.AUTH, \n            payload: {\n                token: res.data.access_token,\n                user: res.data.user\n            } \n        })\n\n        localStorage.setItem(\"firstLogin\", true)\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                success: res.data.msg\n            } \n        })\n    } catch (err) {\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}\n\n\nexport const logout = () => async (dispatch) => {\n    try {\n        localStorage.removeItem('firstLogin')\n        await postDataAPI('logout')\n        window.location.href = \"/\"\n    } catch (err) {\n        dispatch({ \n            type: GLOBALTYPES.ALERT, \n            payload: {\n                error: err.response.data.msg\n            } \n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}