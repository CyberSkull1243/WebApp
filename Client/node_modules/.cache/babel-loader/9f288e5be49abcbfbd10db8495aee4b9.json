{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectSpread from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from'react';import UserCard from'../UserCard';import{useSelector,useDispatch}from'react-redux';import{getDataAPI}from'../../utils/fetchData';import{GLOBALTYPES}from'../../redux/actions/globalTypes';import{useHistory,useParams}from'react-router-dom';import{MESS_TYPES,getConversations}from'../../redux/actions/messageAction';var LeftSide=function LeftSide(){var _useSelector=useSelector(function(state){return state;}),auth=_useSelector.auth,message=_useSelector.message,online=_useSelector.online;var dispatch=useDispatch();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),searchUsers=_useState4[0],setSearchUsers=_useState4[1];var history=useHistory();var _useParams=useParams(),id=_useParams.id;var pageEnd=useRef();var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),page=_useState6[0],setPage=_useState6[1];var handleSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(search){_context.next=3;break;}return _context.abrupt(\"return\",setSearchUsers([]));case 3:_context.prev=3;_context.next=6;return getDataAPI(\"search?username=\".concat(search),auth.token);case 6:res=_context.sent;setSearchUsers(res.data.users);_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](3);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context.t0.response.data.msg}});case 13:case\"end\":return _context.stop();}}},_callee,null,[[3,10]]);}));return function handleSearch(_x){return _ref.apply(this,arguments);};}();var handleText=function handleText(){};var handleAddUser=function handleAddUser(user){setSearch('');setSearchUsers([]);dispatch({type:MESS_TYPES.ADD_USER,payload:_objectSpread(_objectSpread({},user),{},{text:'',media:[]})});dispatch({type:MESS_TYPES.CHECK_ONLINE_OFFLINE,payload:online});return history.push(\"/message/\".concat(user._id));};var isActive=function isActive(user){if(id===user._id)return'active';return'';};useEffect(function(){if(message.firstLoad)return;dispatch(getConversations({auth:auth}));},[dispatch,auth,message.firstLoad]);// Load More\nuseEffect(function(){var observer=new IntersectionObserver(function(entries){if(entries[0].isIntersecting){setPage(function(p){return p+1;});}},{threshold:0.1});observer.observe(pageEnd.current);},[setPage]);useEffect(function(){if(message.resultUsers>=(page-1)*9&&page>1){dispatch(getConversations({auth:auth,page:page}));}},[message.resultUsers,page,auth,dispatch]);// Check User Online - Offline\nuseEffect(function(){if(message.firstLoad){dispatch({type:MESS_TYPES.CHECK_ONLINE_OFFLINE,payload:online});}},[online,message.firstLoad,dispatch]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"form\",{className:\"message_header\",onSubmit:handleSearch,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:search,placeholder:\"Enter to Search...\",onChange:function onChange(e){return setSearch(e.target.value);}}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",style:{display:'none'},children:\"Search\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"message_chat_list\",children:[searchUsers.length!==0?/*#__PURE__*/_jsx(_Fragment,{children:searchUsers.map(function(user){return/*#__PURE__*/_jsx(\"div\",{className:\"message_user \".concat(isActive(user)),onClick:function onClick(){return handleAddUser(user);},children:/*#__PURE__*/_jsx(UserCard,{user:user})},user._id);})}):/*#__PURE__*/_jsx(_Fragment,{children:message.users.map(function(user){return/*#__PURE__*/_jsx(\"div\",{className:\"message_user \".concat(isActive(user)),onClick:function onClick(){return handleAddUser(user);},children:/*#__PURE__*/_jsx(UserCard,{user:user,msg:true,children:user.online?/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-circle text-success\"}):auth.user.following.find(function(item){return item._id===user._id;})&&/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-circle\"})})},user._id);})}),/*#__PURE__*/_jsx(\"button\",{ref:pageEnd,style:{opacity:0},children:\"Load More\"})]})]});};export default LeftSide;","map":{"version":3,"sources":["H:/Mern Stack Projects/WebApp/server/client/src/components/message/LeftSide.js"],"names":["React","useState","useEffect","useRef","UserCard","useSelector","useDispatch","getDataAPI","GLOBALTYPES","useHistory","useParams","MESS_TYPES","getConversations","LeftSide","state","auth","message","online","dispatch","search","setSearch","searchUsers","setSearchUsers","history","id","pageEnd","page","setPage","handleSearch","e","preventDefault","token","res","data","users","type","ALERT","payload","error","response","msg","handleText","handleAddUser","user","ADD_USER","text","media","CHECK_ONLINE_OFFLINE","push","_id","isActive","firstLoad","observer","IntersectionObserver","entries","isIntersecting","p","threshold","observe","current","resultUsers","target","value","display","length","map","following","find","item","opacity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport UserCard from '../UserCard'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { getDataAPI } from '../../utils/fetchData'\nimport { GLOBALTYPES } from '../../redux/actions/globalTypes'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { MESS_TYPES, getConversations } from '../../redux/actions/messageAction'\n\n\nconst LeftSide = () => {\n    const { auth, message, online } = useSelector(state => state)\n    const dispatch = useDispatch()\n\n    const [search, setSearch] = useState('')\n    const [searchUsers, setSearchUsers] = useState([])\n\n    const history = useHistory()\n    const { id } = useParams()\n\n    const pageEnd = useRef()\n    const [page, setPage] = useState(0)\n\n    \n    const handleSearch = async e => {\n        e.preventDefault()\n        if(!search) return setSearchUsers([]);\n\n        try {\n            const res = await getDataAPI(`search?username=${search}`, auth.token)\n            setSearchUsers(res.data.users)\n        } catch (err) {\n            dispatch({\n                type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}\n            })\n        }\n    }\n\n    const handleText = () => {\n        \n    }\n\n    const handleAddUser = (user) => {\n        setSearch('')\n        setSearchUsers([])\n        dispatch({type: MESS_TYPES.ADD_USER, payload: {...user, text: '', media: []}})\n        dispatch({type: MESS_TYPES.CHECK_ONLINE_OFFLINE, payload: online})\n        return history.push(`/message/${user._id}`)\n    }\n\n    const isActive = (user) => {\n        if(id === user._id) return 'active';\n        return ''\n    }\n\n    useEffect(() => {\n        if(message.firstLoad) return;\n        dispatch(getConversations({auth}))\n    },[dispatch, auth, message.firstLoad])\n\n    // Load More\n    useEffect(() => {\n        const observer = new IntersectionObserver(entries => {\n            if(entries[0].isIntersecting){\n                setPage(p => p + 1)\n            }\n        },{\n            threshold: 0.1\n        })\n\n        observer.observe(pageEnd.current)\n    },[setPage])\n\n    useEffect(() => {\n        if(message.resultUsers >= (page - 1) * 9 && page > 1){\n            dispatch(getConversations({auth, page}))\n        }\n    },[message.resultUsers, page, auth, dispatch])\n    \n\n    // Check User Online - Offline\n    useEffect(() => {\n        if(message.firstLoad) {\n            dispatch({type: MESS_TYPES.CHECK_ONLINE_OFFLINE, payload: online})\n        }\n    },[online, message.firstLoad, dispatch])\n\n    return (\n        <>\n            <form className=\"message_header\" onSubmit={handleSearch} >\n                <input type=\"text\" value={search}\n                placeholder=\"Enter to Search...\"\n                onChange={e => setSearch(e.target.value)} />\n\n                <button type=\"submit\" style={{display: 'none'}}>Search</button>\n            </form>\n\n            <div className=\"message_chat_list\">\n           \n                {\n                    searchUsers.length !== 0\n                    ?  <>\n                        {\n                            searchUsers.map(user => (\n                                <div key={user._id} className={`message_user ${isActive(user)}`}\n                                onClick={() => handleAddUser(user)}>\n                                    <UserCard user={user} />  \n                                </div>\n                               \n                            ))\n                            \n                        }\n                        \n                        \n                    </>\n                    : <>\n                        {\n                            message.users.map(user => (\n                                <div key={user._id} className={`message_user ${isActive(user)}`}\n                                onClick={() => handleAddUser(user)}>\n                                    <UserCard user={user} msg={true}>\n                                        {\n                                            user.online\n                                            ? <i className=\"fas fa-circle text-success\" />\n                                            : auth.user.following.find(item => \n                                                item._id === user._id\n                                            ) && <i className=\"fas fa-circle\" />\n                                                \n                                        }\n                                        \n                                    </UserCard>\n                                </div>\n                            ))\n                        }\n                    </>\n                }\n               \n               <button ref={pageEnd} style={{opacity: 0}} >Load More</button>\n            </div>\n        </>\n    )\n}\n\nexport default LeftSide\n"]},"metadata":{},"sourceType":"module"}