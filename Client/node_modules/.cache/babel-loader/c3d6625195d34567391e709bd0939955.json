{"ast":null,"code":"import _toConsumableArray from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GLOBALTYPES}from'./globalTypes';import{imageUpload}from'../../utils/imageUpload';import{postDataAPI,getDataAPI,patchDataAPI,deleteDataAPI}from'../../utils/fetchData';import{createNotify,removeNotify}from'./notifyAction';export var POST_TYPES={CREATE_POST:'CREATE_POST',LOADING_POST:'LOADING_POST',GET_POSTS:'GET_POSTS',UPDATE_POST:'UPDATE_POST',GET_POST:'GET_POST',DELETE_POST:'DELETE_POST'};export var createPost=function createPost(_ref){var content=_ref.content,images=_ref.images,auth=_ref.auth,socket=_ref.socket;return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var media,res,msg;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:media=[];_context.prev=1;dispatch({type:GLOBALTYPES.ALERT,payload:{loading:true}});if(!(images.length>0)){_context.next=7;break;}_context.next=6;return imageUpload(images);case 6:media=_context.sent;case 7:_context.next=9;return postDataAPI('posts',{content:content,images:media},auth.token);case 9:res=_context.sent;dispatch({type:POST_TYPES.CREATE_POST,payload:_objectSpread(_objectSpread({},res.data.newPost),{},{user:auth.user})});dispatch({type:GLOBALTYPES.ALERT,payload:{loading:false}});// Notify\nmsg={id:res.data.newPost._id,text:'added a new post.',recipients:res.data.newPost.user.followers,url:\"/post/\".concat(res.data.newPost._id),content:content,image:media[0].url};dispatch(createNotify({msg:msg,auth:auth,socket:socket}));_context.next=19;break;case 16:_context.prev=16;_context.t0=_context[\"catch\"](1);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context.t0.response.data.msg}});case 19:case\"end\":return _context.stop();}}},_callee,null,[[1,16]]);}));return function(_x){return _ref2.apply(this,arguments);};}();};export var getPosts=function getPosts(token){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;dispatch({type:POST_TYPES.LOADING_POST,payload:true});_context2.next=4;return getDataAPI('posts',token);case 4:res=_context2.sent;dispatch({type:POST_TYPES.GET_POSTS,payload:_objectSpread(_objectSpread({},res.data),{},{page:2})});dispatch({type:POST_TYPES.LOADING_POST,payload:false});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context2.t0.response.data.msg}});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref3.apply(this,arguments);};}();};export var updatePost=function updatePost(_ref4){var content=_ref4.content,images=_ref4.images,auth=_ref4.auth,status=_ref4.status;return/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var media,imgNewUrl,imgOldUrl,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:media=[];imgNewUrl=images.filter(function(img){return!img.url;});imgOldUrl=images.filter(function(img){return img.url;});if(!(status.content===content&&imgNewUrl.length===0&&imgOldUrl.length===status.images.length)){_context3.next=5;break;}return _context3.abrupt(\"return\");case 5:_context3.prev=5;dispatch({type:GLOBALTYPES.ALERT,payload:{loading:true}});if(!(imgNewUrl.length>0)){_context3.next=11;break;}_context3.next=10;return imageUpload(imgNewUrl);case 10:media=_context3.sent;case 11:_context3.next=13;return patchDataAPI(\"post/\".concat(status._id),{content:content,images:[].concat(_toConsumableArray(imgOldUrl),_toConsumableArray(media))},auth.token);case 13:res=_context3.sent;dispatch({type:POST_TYPES.UPDATE_POST,payload:res.data.newPost});dispatch({type:GLOBALTYPES.ALERT,payload:{success:res.data.msg}});_context3.next=21;break;case 18:_context3.prev=18;_context3.t0=_context3[\"catch\"](5);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context3.t0.response.data.msg}});case 21:case\"end\":return _context3.stop();}}},_callee3,null,[[5,18]]);}));return function(_x3){return _ref5.apply(this,arguments);};}();};export var likePost=function likePost(_ref6){var post=_ref6.post,auth=_ref6.auth,socket=_ref6.socket;return/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var newPost,msg;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:newPost=_objectSpread(_objectSpread({},post),{},{likes:[].concat(_toConsumableArray(post.likes),[auth.user])});dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});socket.emit('likePost',newPost);_context4.prev=3;_context4.next=6;return patchDataAPI(\"post/\".concat(post._id,\"/like\"),null,auth.token);case 6:// Notify\nmsg={id:auth.user._id,text:'like your post.',recipients:[post.user._id],url:\"/post/\".concat(post._id),content:post.content,image:post.images[0].url};dispatch(createNotify({msg:msg,auth:auth,socket:socket}));_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](3);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context4.t0.response.data.msg}});case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[3,10]]);}));return function(_x4){return _ref7.apply(this,arguments);};}();};export var unLikePost=function unLikePost(_ref8){var post=_ref8.post,auth=_ref8.auth,socket=_ref8.socket;return/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var newPost,msg;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:newPost=_objectSpread(_objectSpread({},post),{},{likes:post.likes.filter(function(like){return like._id!==auth.user._id;})});dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});socket.emit('unLikePost',newPost);_context5.prev=3;_context5.next=6;return patchDataAPI(\"post/\".concat(post._id,\"/unlike\"),null,auth.token);case 6:// Notify\nmsg={id:auth.user._id,text:'like your post.',recipients:[post.user._id],url:\"/post/\".concat(post._id)};dispatch(removeNotify({msg:msg,auth:auth,socket:socket}));_context5.next=13;break;case 10:_context5.prev=10;_context5.t0=_context5[\"catch\"](3);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context5.t0.response.data.msg}});case 13:case\"end\":return _context5.stop();}}},_callee5,null,[[3,10]]);}));return function(_x5){return _ref9.apply(this,arguments);};}();};export var getPost=function getPost(_ref10){var detailPost=_ref10.detailPost,id=_ref10.id,auth=_ref10.auth;return/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){var res;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:if(!detailPost.every(function(post){return post._id!==id;})){_context6.next=11;break;}_context6.prev=1;_context6.next=4;return getDataAPI(\"post/\".concat(id),auth.token);case 4:res=_context6.sent;dispatch({type:POST_TYPES.GET_POST,payload:res.data.post});_context6.next=11;break;case 8:_context6.prev=8;_context6.t0=_context6[\"catch\"](1);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context6.t0.response.data.msg}});case 11:case\"end\":return _context6.stop();}}},_callee6,null,[[1,8]]);}));return function(_x6){return _ref11.apply(this,arguments);};}();};export var deletePost=function deletePost(_ref12){var post=_ref12.post,auth=_ref12.auth,socket=_ref12.socket;return/*#__PURE__*/function(){var _ref13=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(dispatch){var res,msg;return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:dispatch({type:POST_TYPES.DELETE_POST,payload:post});_context7.prev=1;_context7.next=4;return deleteDataAPI(\"post/\".concat(post._id),auth.token);case 4:res=_context7.sent;// Notify\nmsg={id:post._id,text:'added a new post.',recipients:res.data.newPost.user.followers,url:\"/post/\".concat(post._id)};dispatch(removeNotify({msg:msg,auth:auth,socket:socket}));_context7.next=12;break;case 9:_context7.prev=9;_context7.t0=_context7[\"catch\"](1);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context7.t0.response.data.msg}});case 12:case\"end\":return _context7.stop();}}},_callee7,null,[[1,9]]);}));return function(_x7){return _ref13.apply(this,arguments);};}();};export var savePost=function savePost(_ref14){var post=_ref14.post,auth=_ref14.auth;return/*#__PURE__*/function(){var _ref15=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(dispatch){var newUser;return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:newUser=_objectSpread(_objectSpread({},auth.user),{},{saved:[].concat(_toConsumableArray(auth.user.saved),[post._id])});dispatch({type:GLOBALTYPES.AUTH,payload:_objectSpread(_objectSpread({},auth),{},{user:newUser})});_context8.prev=2;_context8.next=5;return patchDataAPI(\"savePost/\".concat(post._id),null,auth.token);case 5:_context8.next=10;break;case 7:_context8.prev=7;_context8.t0=_context8[\"catch\"](2);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context8.t0.response.data.msg}});case 10:case\"end\":return _context8.stop();}}},_callee8,null,[[2,7]]);}));return function(_x8){return _ref15.apply(this,arguments);};}();};export var unSavePost=function unSavePost(_ref16){var post=_ref16.post,auth=_ref16.auth;return/*#__PURE__*/function(){var _ref17=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(dispatch){var newUser;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:newUser=_objectSpread(_objectSpread({},auth.user),{},{saved:auth.user.saved.filter(function(id){return id!==post._id;})});dispatch({type:GLOBALTYPES.AUTH,payload:_objectSpread(_objectSpread({},auth),{},{user:newUser})});_context9.prev=2;_context9.next=5;return patchDataAPI(\"unSavePost/\".concat(post._id),null,auth.token);case 5:_context9.next=10;break;case 7:_context9.prev=7;_context9.t0=_context9[\"catch\"](2);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context9.t0.response.data.msg}});case 10:case\"end\":return _context9.stop();}}},_callee9,null,[[2,7]]);}));return function(_x9){return _ref17.apply(this,arguments);};}();};","map":{"version":3,"sources":["H:/Mern Stack Projects/WebApp/server/client/src/redux/actions/postAction.js"],"names":["GLOBALTYPES","imageUpload","postDataAPI","getDataAPI","patchDataAPI","deleteDataAPI","createNotify","removeNotify","POST_TYPES","CREATE_POST","LOADING_POST","GET_POSTS","UPDATE_POST","GET_POST","DELETE_POST","createPost","content","images","auth","socket","dispatch","media","type","ALERT","payload","loading","length","token","res","data","newPost","user","msg","id","_id","text","recipients","followers","url","image","error","response","getPosts","page","updatePost","status","imgNewUrl","filter","img","imgOldUrl","success","likePost","post","likes","emit","unLikePost","like","getPost","detailPost","every","deletePost","savePost","newUser","saved","AUTH","unSavePost"],"mappings":"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","sourcesContent":["import { GLOBALTYPES } from './globalTypes'\nimport { imageUpload } from '../../utils/imageUpload'\nimport { postDataAPI, getDataAPI, patchDataAPI, deleteDataAPI } from '../../utils/fetchData'\nimport { createNotify, removeNotify } from './notifyAction'\n\nexport const POST_TYPES = {\n    CREATE_POST: 'CREATE_POST',\n    LOADING_POST: 'LOADING_POST',\n    GET_POSTS: 'GET_POSTS',\n    UPDATE_POST: 'UPDATE_POST',\n    GET_POST: 'GET_POST',\n    DELETE_POST: 'DELETE_POST'\n}\n\n\nexport const createPost = ({content, images, auth, socket}) => async (dispatch) => {\n    let media = []\n    try {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: true} })\n        if(images.length > 0) media = await imageUpload(images)\n\n        const res = await postDataAPI('posts', { content, images: media }, auth.token)\n\n        dispatch({ \n            type: POST_TYPES.CREATE_POST, \n            payload: {...res.data.newPost, user: auth.user} \n        })\n\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: false} })\n\n        // Notify\n        const msg = {\n            id: res.data.newPost._id,\n            text: 'added a new post.',\n            recipients: res.data.newPost.user.followers,\n            url: `/post/${res.data.newPost._id}`,\n            content, \n            image: media[0].url\n        }\n\n        dispatch(createNotify({msg, auth, socket}))\n\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg}\n        })\n    }\n}\n\nexport const getPosts = (token) => async (dispatch) => {\n    try {\n        dispatch({ type: POST_TYPES.LOADING_POST, payload: true })\n        const res = await getDataAPI('posts', token)\n        \n        dispatch({\n            type: POST_TYPES.GET_POSTS,\n            payload: {...res.data, page: 2}\n        })\n\n        dispatch({ type: POST_TYPES.LOADING_POST, payload: false })\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg}\n        })\n    }\n}\n\nexport const updatePost = ({content, images, auth, status}) => async (dispatch) => {\n    let media = []\n    const imgNewUrl = images.filter(img => !img.url)\n    const imgOldUrl = images.filter(img => img.url)\n\n    if(status.content === content \n        && imgNewUrl.length === 0\n        && imgOldUrl.length === status.images.length\n    ) return;\n\n    try {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {loading: true} })\n        if(imgNewUrl.length > 0) media = await imageUpload(imgNewUrl)\n\n        const res = await patchDataAPI(`post/${status._id}`, { \n            content, images: [...imgOldUrl, ...media] \n        }, auth.token)\n\n        dispatch({ type: POST_TYPES.UPDATE_POST, payload: res.data.newPost })\n\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {success: res.data.msg} })\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg}\n        })\n    }\n}\n\nexport const likePost = ({post, auth, socket}) => async (dispatch) => {\n    const newPost = {...post, likes: [...post.likes, auth.user]}\n    dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost})\n\n    socket.emit('likePost', newPost)\n\n    try {\n        await patchDataAPI(`post/${post._id}/like`, null, auth.token)\n        \n        // Notify\n        const msg = {\n            id: auth.user._id,\n            text: 'like your post.',\n            recipients: [post.user._id],\n            url: `/post/${post._id}`,\n            content: post.content, \n            image: post.images[0].url\n        }\n\n        dispatch(createNotify({msg, auth, socket}))\n\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg}\n        })\n    }\n}\n\nexport const unLikePost = ({post, auth, socket}) => async (dispatch) => {\n    const newPost = {...post, likes: post.likes.filter(like => like._id !== auth.user._id)}\n    dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost})\n\n    socket.emit('unLikePost', newPost)\n\n    try {\n        await patchDataAPI(`post/${post._id}/unlike`, null, auth.token)\n\n        // Notify\n        const msg = {\n            id: auth.user._id,\n            text: 'like your post.',\n            recipients: [post.user._id],\n            url: `/post/${post._id}`,\n        }\n        dispatch(removeNotify({msg, auth, socket}))\n\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg}\n        })\n    }\n}\n\nexport const getPost = ({detailPost, id, auth}) => async (dispatch) => {\n    if(detailPost.every(post => post._id !== id)){\n        try {\n            const res = await getDataAPI(`post/${id}`, auth.token)\n            dispatch({ type: POST_TYPES.GET_POST, payload: res.data.post })\n        } catch (err) {\n            dispatch({\n                type: GLOBALTYPES.ALERT,\n                payload: {error: err.response.data.msg}\n            })\n        }\n    }\n}\n\nexport const deletePost = ({post, auth, socket}) => async (dispatch) => {\n    dispatch({ type: POST_TYPES.DELETE_POST, payload: post })\n\n    try {\n        const res = await deleteDataAPI(`post/${post._id}`, auth.token)\n\n        // Notify\n        const msg = {\n            id: post._id,\n            text: 'added a new post.',\n            recipients: res.data.newPost.user.followers,\n            url: `/post/${post._id}`,\n        }\n        dispatch(removeNotify({msg, auth, socket}))\n        \n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg}\n        })\n    }\n}\n\nexport const savePost = ({post, auth}) => async (dispatch) => {\n    const newUser = {...auth.user, saved: [...auth.user.saved, post._id]}\n    dispatch({ type: GLOBALTYPES.AUTH, payload: {...auth, user: newUser}})\n\n    try {\n        await patchDataAPI(`savePost/${post._id}`, null, auth.token)\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg}\n        })\n    }\n}\n\nexport const unSavePost = ({post, auth}) => async (dispatch) => {\n    const newUser = {...auth.user, saved: auth.user.saved.filter(id => id !== post._id) }\n    dispatch({ type: GLOBALTYPES.AUTH, payload: {...auth, user: newUser}})\n\n    try {\n        await patchDataAPI(`unSavePost/${post._id}`, null, auth.token)\n    } catch (err) {\n        dispatch({\n            type: GLOBALTYPES.ALERT,\n            payload: {error: err.response.data.msg}\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}