{"ast":null,"code":"import _regeneratorRuntime from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GLOBALTYPES,EditData,DeleteData}from'./globalTypes';import{POST_TYPES}from'./postAction';import{postDataAPI,patchDataAPI,deleteDataAPI}from'../../utils/fetchData';import{createNotify,removeNotify}from'../actions/notifyAction';export var createComment=function createComment(_ref){var post=_ref.post,newComment=_ref.newComment,auth=_ref.auth,socket=_ref.socket;return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var newPost,data,res,newData,_newPost,msg;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newPost=_objectSpread(_objectSpread({},post),{},{comments:[].concat(_toConsumableArray(post.comments),[newComment])});dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});_context.prev=2;data=_objectSpread(_objectSpread({},newComment),{},{postId:post._id,postUserId:post.user._id});_context.next=6;return postDataAPI('comment',data,auth.token);case 6:res=_context.sent;newData=_objectSpread(_objectSpread({},res.data.newComment),{},{user:auth.user});_newPost=_objectSpread(_objectSpread({},post),{},{comments:[].concat(_toConsumableArray(post.comments),[newData])});dispatch({type:POST_TYPES.UPDATE_POST,payload:_newPost});// Socket\nsocket.emit('createComment',_newPost);// Notify\nmsg={id:res.data.newComment._id,text:newComment.reply?'mentioned you in a comment.':'has commented on your post.',recipients:newComment.reply?[newComment.tag._id]:[post.user._id],url:\"/post/\".concat(post._id),content:post.content,image:post.images[0].url};dispatch(createNotify({msg:msg,auth:auth,socket:socket}));_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](2);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context.t0.response.data.msg}});case 18:case\"end\":return _context.stop();}}},_callee,null,[[2,15]]);}));return function(_x){return _ref2.apply(this,arguments);};}();};export var updateComment=function updateComment(_ref3){var comment=_ref3.comment,post=_ref3.post,content=_ref3.content,auth=_ref3.auth;return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var newComments,newPost;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:newComments=EditData(post.comments,comment._id,_objectSpread(_objectSpread({},comment),{},{content:content}));newPost=_objectSpread(_objectSpread({},post),{},{comments:newComments});dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});try{patchDataAPI(\"comment/\".concat(comment._id),{content:content},auth.token);}catch(err){dispatch({type:GLOBALTYPES.ALERT,payload:{error:err.response.data.msg}});}case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref4.apply(this,arguments);};}();};export var likeComment=function likeComment(_ref5){var comment=_ref5.comment,post=_ref5.post,auth=_ref5.auth;return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var newComment,newComments,newPost;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:newComment=_objectSpread(_objectSpread({},comment),{},{likes:[].concat(_toConsumableArray(comment.likes),[auth.user])});newComments=EditData(post.comments,comment._id,newComment);newPost=_objectSpread(_objectSpread({},post),{},{comments:newComments});dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});_context3.prev=4;_context3.next=7;return patchDataAPI(\"comment/\".concat(comment._id,\"/like\"),null,auth.token);case 7:_context3.next=12;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](4);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context3.t0.response.data.msg}});case 12:case\"end\":return _context3.stop();}}},_callee3,null,[[4,9]]);}));return function(_x3){return _ref6.apply(this,arguments);};}();};export var unLikeComment=function unLikeComment(_ref7){var comment=_ref7.comment,post=_ref7.post,auth=_ref7.auth;return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var newComment,newComments,newPost;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:newComment=_objectSpread(_objectSpread({},comment),{},{likes:DeleteData(comment.likes,auth.user._id)});newComments=EditData(post.comments,comment._id,newComment);newPost=_objectSpread(_objectSpread({},post),{},{comments:newComments});dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});_context4.prev=4;_context4.next=7;return patchDataAPI(\"comment/\".concat(comment._id,\"/unlike\"),null,auth.token);case 7:_context4.next=12;break;case 9:_context4.prev=9;_context4.t0=_context4[\"catch\"](4);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context4.t0.response.data.msg}});case 12:case\"end\":return _context4.stop();}}},_callee4,null,[[4,9]]);}));return function(_x4){return _ref8.apply(this,arguments);};}();};export var deleteComment=function deleteComment(_ref9){var post=_ref9.post,comment=_ref9.comment,auth=_ref9.auth,socket=_ref9.socket;return/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var deleteArr,newPost;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:deleteArr=[].concat(_toConsumableArray(post.comments.filter(function(cm){return cm.reply===comment._id;})),[comment]);newPost=_objectSpread(_objectSpread({},post),{},{comments:post.comments.filter(function(cm){return!deleteArr.find(function(da){return cm._id===da._id;});})});dispatch({type:POST_TYPES.UPDATE_POST,payload:newPost});socket.emit('deleteComment',newPost);try{deleteArr.forEach(function(item){deleteDataAPI(\"comment/\".concat(item._id),auth.token);var msg={id:item._id,text:comment.reply?'mentioned you in a comment.':'has commented on your post.',recipients:comment.reply?[comment.tag._id]:[post.user._id],url:\"/post/\".concat(post._id)};dispatch(removeNotify({msg:msg,auth:auth,socket:socket}));});}catch(err){dispatch({type:GLOBALTYPES.ALERT,payload:{error:err.response.data.msg}});}case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function(_x5){return _ref10.apply(this,arguments);};}();};","map":{"version":3,"sources":["H:/Mern Stack Projects/WebApp/server/client/src/redux/actions/commentAction.js"],"names":["GLOBALTYPES","EditData","DeleteData","POST_TYPES","postDataAPI","patchDataAPI","deleteDataAPI","createNotify","removeNotify","createComment","post","newComment","auth","socket","dispatch","newPost","comments","type","UPDATE_POST","payload","data","postId","_id","postUserId","user","token","res","newData","emit","msg","id","text","reply","recipients","tag","url","content","image","images","ALERT","error","response","updateComment","comment","newComments","err","likeComment","likes","unLikeComment","deleteComment","deleteArr","filter","cm","find","da","forEach","item"],"mappings":"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","sourcesContent":["import { GLOBALTYPES, EditData, DeleteData } from './globalTypes'\nimport { POST_TYPES } from './postAction'\nimport { postDataAPI, patchDataAPI, deleteDataAPI } from '../../utils/fetchData'\nimport { createNotify, removeNotify } from '../actions/notifyAction'\n\n\nexport const createComment = ({post, newComment, auth, socket}) => async (dispatch) => {\n    const newPost = {...post, comments: [...post.comments, newComment]}\n    \n    dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost })\n\n    try {\n        const data = {...newComment, postId: post._id, postUserId: post.user._id}\n        const res = await postDataAPI('comment', data, auth.token)\n\n        const newData = {...res.data.newComment, user: auth.user}\n        const newPost = {...post, comments: [...post.comments, newData]}\n        dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost })\n\n        // Socket\n        socket.emit('createComment', newPost)\n\n        // Notify\n        const msg = {\n            id: res.data.newComment._id,\n            text: newComment.reply ? 'mentioned you in a comment.' : 'has commented on your post.',\n            recipients: newComment.reply ? [newComment.tag._id] : [post.user._id],\n            url: `/post/${post._id}`,\n            content: post.content, \n            image: post.images[0].url\n        }\n\n        dispatch(createNotify({msg, auth, socket}))\n        \n    } catch (err) {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg} })\n    }\n}\n\nexport const updateComment = ({comment, post, content, auth}) => async (dispatch) => {\n    const newComments = EditData(post.comments, comment._id, {...comment, content})\n    const newPost = {...post, comments: newComments}\n    \n    dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost })\n    try {\n        patchDataAPI(`comment/${comment._id}`, { content }, auth.token)\n    } catch (err) {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg} })\n    }\n}\n\nexport const likeComment = ({comment, post, auth}) => async (dispatch) => {\n    const newComment = {...comment, likes: [...comment.likes, auth.user]}\n\n    const newComments = EditData(post.comments, comment._id, newComment)\n\n    const newPost = {...post, comments: newComments}\n    \n    dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost })\n\n    try {\n        await patchDataAPI(`comment/${comment._id}/like`, null, auth.token)\n    } catch (err) {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg} })\n    }\n}\n\nexport const unLikeComment = ({comment, post, auth}) => async (dispatch) => {\n\n    const newComment = {...comment, likes: DeleteData(comment.likes, auth.user._id)}\n\n    const newComments = EditData(post.comments, comment._id, newComment)\n\n    const newPost = {...post, comments: newComments}\n    \n    dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost })\n\n    try {\n        await patchDataAPI(`comment/${comment._id}/unlike`, null, auth.token)\n    } catch (err) {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg} })\n    }\n}\n\nexport const deleteComment = ({post, comment, auth, socket}) => async (dispatch) => {\n    const deleteArr = [...post.comments.filter(cm => cm.reply === comment._id), comment]\n    \n    const newPost = {\n        ...post,\n        comments: post.comments.filter(cm => !deleteArr.find(da => cm._id === da._id))\n    }\n\n    dispatch({ type: POST_TYPES.UPDATE_POST, payload: newPost })\n\n    socket.emit('deleteComment', newPost)\n    try {\n       deleteArr.forEach(item => {\n            deleteDataAPI(`comment/${item._id}`, auth.token)\n\n            const msg = {\n                id: item._id,\n                text: comment.reply ? 'mentioned you in a comment.' : 'has commented on your post.',\n                recipients: comment.reply ? [comment.tag._id] : [post.user._id],\n                url: `/post/${post._id}`,\n            }\n    \n            dispatch(removeNotify({msg, auth, socket}))\n       })\n    } catch (err) {\n        dispatch({ type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg} })\n    }\n\n}"]},"metadata":{},"sourceType":"module"}