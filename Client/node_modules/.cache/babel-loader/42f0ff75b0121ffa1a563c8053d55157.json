{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import CommentDisplay from'./comments/CommentDisplay';var Comments=function Comments(_ref){var post=_ref.post;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),comments=_useState2[0],setComments=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),showComments=_useState4[0],setShowComments=_useState4[1];var _useState5=useState(2),_useState6=_slicedToArray(_useState5,2),next=_useState6[0],setNext=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),replyComments=_useState8[0],setReplyComments=_useState8[1];useEffect(function(){var newCm=post.comments.filter(function(cm){return!cm.reply;});setComments(newCm);setShowComments(newCm.slice(newCm.length-next));},[post.comments,next]);useEffect(function(){var newRep=post.comments.filter(function(cm){return cm.reply;});setReplyComments(newRep);},[post.comments]);return/*#__PURE__*/_jsxs(\"div\",{className:\"comments\",children:[showComments.map(function(comment,index){return/*#__PURE__*/_jsx(CommentDisplay,{comment:comment,post:post,replyCm:replyComments.filter(function(item){return item.reply===comment._id;})},index);}),comments.length-next>0?/*#__PURE__*/_jsx(\"div\",{className:\"p-2 border-top\",style:{cursor:'pointer',color:'crimson'},onClick:function onClick(){return setNext(next+10);},children:\"See more comments...\"}):comments.length>2&&/*#__PURE__*/_jsx(\"div\",{className:\"p-2 border-top\",style:{cursor:'pointer',color:'crimson'},onClick:function onClick(){return setNext(2);},children:\"Hide comments...\"})]});};export default Comments;","map":{"version":3,"sources":["H:/Mern Stack Projects/WebApp/server/client/src/components/home/Comments.js"],"names":["React","useState","useEffect","CommentDisplay","Comments","post","comments","setComments","showComments","setShowComments","next","setNext","replyComments","setReplyComments","newCm","filter","cm","reply","slice","length","newRep","map","comment","index","item","_id","cursor","color"],"mappings":"0PAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,cAAP,KAA2B,2BAA3B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAY,IAAVC,CAAAA,IAAU,MAAVA,IAAU,eACOJ,QAAQ,CAAC,EAAD,CADf,wCAClBK,QADkB,eACRC,WADQ,8BAEeN,QAAQ,CAAC,EAAD,CAFvB,yCAElBO,YAFkB,eAEJC,eAFI,8BAGDR,QAAQ,CAAC,CAAD,CAHP,yCAGlBS,IAHkB,eAGZC,OAHY,8BAKiBV,QAAQ,CAAC,EAAD,CALzB,yCAKlBW,aALkB,eAKHC,gBALG,eAOzBX,SAAS,CAAC,UAAM,CACZ,GAAMY,CAAAA,KAAK,CAAGT,IAAI,CAACC,QAAL,CAAcS,MAAd,CAAqB,SAAAC,EAAE,QAAI,CAACA,EAAE,CAACC,KAAR,EAAvB,CAAd,CACAV,WAAW,CAACO,KAAD,CAAX,CACAL,eAAe,CAACK,KAAK,CAACI,KAAN,CAAYJ,KAAK,CAACK,MAAN,CAAeT,IAA3B,CAAD,CAAf,CACH,CAJQ,CAIP,CAACL,IAAI,CAACC,QAAN,CAAgBI,IAAhB,CAJO,CAAT,CAMAR,SAAS,CAAC,UAAK,CACX,GAAMkB,CAAAA,MAAM,CAAGf,IAAI,CAACC,QAAL,CAAcS,MAAd,CAAqB,SAAAC,EAAE,QAAIA,CAAAA,EAAE,CAACC,KAAP,EAAvB,CAAf,CACAJ,gBAAgB,CAACO,MAAD,CAAhB,CACH,CAHQ,CAGN,CAACf,IAAI,CAACC,QAAN,CAHM,CAAT,CAKA,mBACI,aAAK,SAAS,CAAC,UAAf,WAEQE,YAAY,CAACa,GAAb,CAAiB,SAACC,OAAD,CAAUC,KAAV,qBACb,KAAC,cAAD,EAA4B,OAAO,CAAED,OAArC,CAA8C,IAAI,CAAEjB,IAApD,CACA,OAAO,CAAEO,aAAa,CAACG,MAAd,CAAqB,SAAAS,IAAI,QAAIA,CAAAA,IAAI,CAACP,KAAL,GAAeK,OAAO,CAACG,GAA3B,EAAzB,CADT,EAAqBF,KAArB,CADa,EAAjB,CAFR,CASQjB,QAAQ,CAACa,MAAT,CAAkBT,IAAlB,CAAyB,CAAzB,cACE,YAAK,SAAS,CAAC,gBAAf,CACF,KAAK,CAAE,CAACgB,MAAM,CAAE,SAAT,CAAoBC,KAAK,CAAE,SAA3B,CADL,CAEF,OAAO,CAAE,yBAAMhB,CAAAA,OAAO,CAACD,IAAI,CAAG,EAAR,CAAb,EAFP,kCADF,CAOEJ,QAAQ,CAACa,MAAT,CAAkB,CAAlB,eACF,YAAK,SAAS,CAAC,gBAAf,CACA,KAAK,CAAE,CAACO,MAAM,CAAE,SAAT,CAAoBC,KAAK,CAAE,SAA3B,CADP,CAEA,OAAO,CAAE,yBAAMhB,CAAAA,OAAO,CAAC,CAAD,CAAb,EAFT,8BAjBR,GADJ,CA0BH,CA5CD,CA8CA,cAAeP,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport CommentDisplay from './comments/CommentDisplay'\n\nconst Comments = ({post}) => {\n    const [comments, setComments] = useState([])\n    const [showComments, setShowComments] = useState([])\n    const [next, setNext] = useState(2)\n\n    const [replyComments, setReplyComments] = useState([])\n\n    useEffect(() => {\n        const newCm = post.comments.filter(cm => !cm.reply)\n        setComments(newCm)\n        setShowComments(newCm.slice(newCm.length - next))\n    },[post.comments, next])\n\n    useEffect(()=> {\n        const newRep = post.comments.filter(cm => cm.reply)\n        setReplyComments(newRep)\n    }, [post.comments])\n\n    return (\n        <div className=\"comments\">\n            {\n                showComments.map((comment, index) => (\n                    <CommentDisplay key={index} comment={comment} post={post}\n                    replyCm={replyComments.filter(item => item.reply === comment._id)} />\n                ))\n            }\n\n            {\n                comments.length - next > 0\n                ? <div className=\"p-2 border-top\"\n                style={{cursor: 'pointer', color: 'crimson'}}\n                onClick={() => setNext(next + 10)}>\n                    See more comments...\n                </div>\n\n                : comments.length > 2 &&\n                <div className=\"p-2 border-top\"\n                style={{cursor: 'pointer', color: 'crimson'}}\n                onClick={() => setNext(2)}>\n                    Hide comments...\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default Comments\n"]},"metadata":{},"sourceType":"module"}