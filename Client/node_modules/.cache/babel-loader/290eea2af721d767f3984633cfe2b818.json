{"ast":null,"code":"import _regeneratorRuntime from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"H:/Mern Stack Projects/WebApp/Server/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{GLOBALTYPES,DeleteData}from'../actions/globalTypes';import{postDataAPI,getDataAPI,deleteDataAPI}from'../../utils/fetchData';export var MESS_TYPES={ADD_USER:'ADD_USER',ADD_MESSAGE:'ADD_MESSAGE',GET_CONVERSATIONS:'GET_CONVERSATIONS',GET_MESSAGES:'GET_MESSAGES',UPDATE_MESSAGES:'UPDATE_MESSAGES',DELETE_MESSAGES:'DELETE_MESSAGES',DELETE_CONVERSATION:'DELETE_CONVERSATION',CHECK_ONLINE_OFFLINE:'CHECK_ONLINE_OFFLINE'};export var addMessage=function addMessage(_ref){var msg=_ref.msg,auth=_ref.auth,socket=_ref.socket;return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var _auth$user,_id,avatar,fullname,username;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:dispatch({type:MESS_TYPES.ADD_MESSAGE,payload:msg});_auth$user=auth.user,_id=_auth$user._id,avatar=_auth$user.avatar,fullname=_auth$user.fullname,username=_auth$user.username;socket.emit('addMessage',_objectSpread(_objectSpread({},msg),{},{user:{_id:_id,avatar:avatar,fullname:fullname,username:username}}));_context.prev=3;_context.next=6;return postDataAPI('message',msg,auth.token);case 6:_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](3);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context.t0.response.data.msg}});case 11:case\"end\":return _context.stop();}}},_callee,null,[[3,8]]);}));return function(_x){return _ref2.apply(this,arguments);};}();};export var getConversations=function getConversations(_ref3){var auth=_ref3.auth,_ref3$page=_ref3.page,page=_ref3$page===void 0?1:_ref3$page;return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res,newArr;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return getDataAPI(\"conversations?limit=\".concat(page*9),auth.token);case 3:res=_context2.sent;newArr=[];res.data.conversations.forEach(function(item){item.recipients.forEach(function(cv){if(cv._id!==auth.user._id){newArr.push(_objectSpread(_objectSpread({},cv),{},{text:item.text,media:item.media,call:item.call}));}});});dispatch({type:MESS_TYPES.GET_CONVERSATIONS,payload:{newArr:newArr,result:res.data.result}});_context2.next=12;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context2.t0.response.data.msg}});case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function(_x2){return _ref4.apply(this,arguments);};}();};export var getMessages=function getMessages(_ref5){var auth=_ref5.auth,id=_ref5.id,_ref5$page=_ref5.page,page=_ref5$page===void 0?1:_ref5$page;return/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var res,newData;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return getDataAPI(\"message/\".concat(id,\"?limit=\").concat(page*9),auth.token);case 3:res=_context3.sent;newData=_objectSpread(_objectSpread({},res.data),{},{messages:res.data.messages.reverse()});dispatch({type:MESS_TYPES.GET_MESSAGES,payload:_objectSpread(_objectSpread({},newData),{},{_id:id,page:page})});_context3.next=11;break;case 8:_context3.prev=8;_context3.t0=_context3[\"catch\"](0);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context3.t0.response.data.msg}});case 11:case\"end\":return _context3.stop();}}},_callee3,null,[[0,8]]);}));return function(_x3){return _ref6.apply(this,arguments);};}();};export var loadMoreMessages=function loadMoreMessages(_ref7){var auth=_ref7.auth,id=_ref7.id,_ref7$page=_ref7.page,page=_ref7$page===void 0?1:_ref7$page;return/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var res,newData;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return getDataAPI(\"message/\".concat(id,\"?limit=\").concat(page*9),auth.token);case 3:res=_context4.sent;newData=_objectSpread(_objectSpread({},res.data),{},{messages:res.data.messages.reverse()});dispatch({type:MESS_TYPES.UPDATE_MESSAGES,payload:_objectSpread(_objectSpread({},newData),{},{_id:id,page:page})});_context4.next=11;break;case 8:_context4.prev=8;_context4.t0=_context4[\"catch\"](0);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context4.t0.response.data.msg}});case 11:case\"end\":return _context4.stop();}}},_callee4,null,[[0,8]]);}));return function(_x4){return _ref8.apply(this,arguments);};}();};export var deleteMessages=function deleteMessages(_ref9){var msg=_ref9.msg,data=_ref9.data,auth=_ref9.auth;return/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch){var newData;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:newData=DeleteData(data,msg._id);dispatch({type:MESS_TYPES.DELETE_MESSAGES,payload:{newData:newData,_id:msg.recipient}});_context5.prev=2;_context5.next=5;return deleteDataAPI(\"message/\".concat(msg._id),auth.token);case 5:_context5.next=10;break;case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](2);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context5.t0.response.data.msg}});case 10:case\"end\":return _context5.stop();}}},_callee5,null,[[2,7]]);}));return function(_x5){return _ref10.apply(this,arguments);};}();};export var deleteConversation=function deleteConversation(_ref11){var auth=_ref11.auth,id=_ref11.id;return/*#__PURE__*/function(){var _ref12=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:dispatch({type:MESS_TYPES.DELETE_CONVERSATION,payload:id});_context6.prev=1;_context6.next=4;return deleteDataAPI(\"conversation/\".concat(id),auth.token);case 4:_context6.next=9;break;case 6:_context6.prev=6;_context6.t0=_context6[\"catch\"](1);dispatch({type:GLOBALTYPES.ALERT,payload:{error:_context6.t0.response.data.msg}});case 9:case\"end\":return _context6.stop();}}},_callee6,null,[[1,6]]);}));return function(_x6){return _ref12.apply(this,arguments);};}();};","map":{"version":3,"sources":["H:/Mern Stack Projects/WebApp/server/client/src/redux/actions/messageAction.js"],"names":["GLOBALTYPES","DeleteData","postDataAPI","getDataAPI","deleteDataAPI","MESS_TYPES","ADD_USER","ADD_MESSAGE","GET_CONVERSATIONS","GET_MESSAGES","UPDATE_MESSAGES","DELETE_MESSAGES","DELETE_CONVERSATION","CHECK_ONLINE_OFFLINE","addMessage","msg","auth","socket","dispatch","type","payload","user","_id","avatar","fullname","username","emit","token","ALERT","error","response","data","getConversations","page","res","newArr","conversations","forEach","item","recipients","cv","push","text","media","call","result","getMessages","id","newData","messages","reverse","loadMoreMessages","deleteMessages","recipient","deleteConversation"],"mappings":"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","sourcesContent":["import { GLOBALTYPES, DeleteData } from '../actions/globalTypes'\nimport { postDataAPI, getDataAPI, deleteDataAPI } from '../../utils/fetchData'\n\nexport const MESS_TYPES = {\n    ADD_USER: 'ADD_USER',\n    ADD_MESSAGE: 'ADD_MESSAGE',\n    GET_CONVERSATIONS: 'GET_CONVERSATIONS',\n    GET_MESSAGES: 'GET_MESSAGES',\n    UPDATE_MESSAGES: 'UPDATE_MESSAGES',\n    DELETE_MESSAGES: 'DELETE_MESSAGES',\n    DELETE_CONVERSATION: 'DELETE_CONVERSATION',\n    CHECK_ONLINE_OFFLINE: 'CHECK_ONLINE_OFFLINE'\n}\n\n\n\nexport const addMessage = ({msg, auth, socket}) => async (dispatch) =>{\n    dispatch({type: MESS_TYPES.ADD_MESSAGE, payload: msg})\n\n    const { _id, avatar, fullname, username } = auth.user\n    socket.emit('addMessage', {...msg, user: { _id, avatar, fullname, username } })\n    \n    try {\n        await postDataAPI('message', msg, auth.token)\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\n    }\n}\n\nexport const getConversations = ({auth, page = 1}) => async (dispatch) => {\n    try {\n        const res = await getDataAPI(`conversations?limit=${page * 9}`, auth.token)\n        \n        let newArr = [];\n        res.data.conversations.forEach(item => {\n            item.recipients.forEach(cv => {\n                if(cv._id !== auth.user._id){\n                    newArr.push({...cv, text: item.text, media: item.media, call: item.call})\n                }\n            })\n        })\n\n        dispatch({\n            type: MESS_TYPES.GET_CONVERSATIONS, \n            payload: {newArr, result: res.data.result}\n        })\n\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\n    }\n}\n\nexport const getMessages = ({auth, id, page = 1}) => async (dispatch) => {\n    try {\n        const res = await getDataAPI(`message/${id}?limit=${page * 9}`, auth.token)\n        const newData = {...res.data, messages: res.data.messages.reverse()}\n\n        dispatch({type: MESS_TYPES.GET_MESSAGES, payload: {...newData, _id: id, page}})\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\n    }\n}\n\nexport const loadMoreMessages = ({auth, id, page = 1}) => async (dispatch) => {\n    try {\n        const res = await getDataAPI(`message/${id}?limit=${page * 9}`, auth.token)\n        const newData = {...res.data, messages: res.data.messages.reverse()}\n\n        dispatch({type: MESS_TYPES.UPDATE_MESSAGES, payload: {...newData, _id: id, page}})\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\n    }\n}\n\nexport const deleteMessages = ({msg, data, auth}) => async (dispatch) => {\n    const newData = DeleteData(data, msg._id)\n    dispatch({type: MESS_TYPES.DELETE_MESSAGES, payload: {newData, _id: msg.recipient}})\n    try {\n        await deleteDataAPI(`message/${msg._id}`, auth.token)\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\n    }\n}\n\nexport const deleteConversation = ({auth, id}) => async (dispatch) => {\n    dispatch({type: MESS_TYPES.DELETE_CONVERSATION, payload: id})\n    try {\n        await deleteDataAPI(`conversation/${id}`, auth.token)\n    } catch (err) {\n        dispatch({type: GLOBALTYPES.ALERT, payload: {error: err.response.data.msg}})\n    }\n}"]},"metadata":{},"sourceType":"module"}